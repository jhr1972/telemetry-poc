apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  namespace: telemetry-poc # Or whatever namespace you are using
data:
  otel-collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: "0.0.0.0:4317"
          http:
            endpoint: "0.0.0.0:4318"
      # You can add other receivers here for metrics (e.g., prometheus) or logs.

    processors:
      batch:
      # The batch processor helps to reduce the number of outgoing connections and improve efficiency.
        send_batch_size: 1000
        timeout: 5s
      k8sattributes:
      # This processor enriches your telemetry data with Kubernetes metadata like pod names and namespaces.
        auth_type: "serviceAccount"

    exporters:
      otlp:
        endpoint: "tempo-distributor.tempo.svc.cluster.local:4317"
        # The endpoint should point to the Grafana Tempo service within your cluster.
        # "tempo-distributor.tempo.svc.cluster.local" is a common DNS name for the Tempo distributor service.
        # You may need to adjust this based on how you deploy Tempo.

    service:
      telemetry:
        logs:
          level: "info"
      pipelines:
        traces:
          receivers: [otlp]
          processors: [k8sattributes, batch]
          exporters: [otlp]
        # This defines the data flow for traces: receive OTLP data, process it with
        # k8sattributes and batch, and then export it via OTLP.